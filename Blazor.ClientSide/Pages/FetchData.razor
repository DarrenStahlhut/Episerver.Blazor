@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

ResponseBody
@responseBody

@code {

string responseBody = string.Empty;

WeatherForecast[] forecasts;

protected override async Task OnInitAsync()
{
    HttpClient client = new HttpClient();
    client.DefaultRequestHeaders.TryAddWithoutValidation("Accept", "application/json");
    client.DefaultRequestHeaders.TryAddWithoutValidation("Accept-Language", "en");

    HttpResponseMessage response = await client.GetAsync("http://localhost:53272/api/episerver/v2.0/search/content?query=bears&skip=0&top=1&expand=*&filter=ContentType/any(t:t eq 'Page')");
    response.EnsureSuccessStatusCode();
    responseBody = await response.Content.ReadAsStringAsync();


    forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
}

class WeatherForecast
{
    public DateTime Date { get; set; }

    public int TemperatureC { get; set; }

    public int TemperatureF { get; set; }

    public string Summary { get; set; }
}
}
